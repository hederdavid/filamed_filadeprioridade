import java.time.LocalDate
import java.time.LocalDateTime
import java.time.format.DateTimeFormatter
import java.time.format.DateTimeParseException
import java.util.*

fun main() {
    val scanner = Scanner(System.`in`)
    val fila = FilaPrioridade(10)
    var opcaoEscolhida = 0

    while (true) {
        println("\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó")
        println("‚ïë                                                               ‚ïë")
        println("‚ïë         FILAMED - GERENCIADOR DE FILAS DE PRIORIDADE          ‚ïë")
        println("‚ïë                                                               ‚ïë")
        println("‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£")
        println("‚ïë                                                               ‚ïë")
        println("‚ïë                       Selecione uma op√ß√£o:                    ‚ïë")
        println("‚ïë                                                               ‚ïë")
        println("‚ïë  1.  Adicionar paciente                                       ‚ïë")
        println("‚ïë  2.  Chamar pr√≥ximo paciente                                  ‚ïë")
        println("‚ïë  3.  Verificar imin√™ncia de atendimento                       ‚ïë")
        println("‚ïë  4.  Consultar pr√≥ximo paciente de uma fila                   ‚ïë")
        println("‚ïë  5.  Consultar estat√≠sticas                                   ‚ïë")
        println("‚ïë  6.  Sair                                                     ‚ïë")
        println("‚ïë                                                               ‚ïë")
        println("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù")

        while (true) {
            try {
                print("üÖæÔ∏èOp√ß√£o: ")
                opcaoEscolhida = scanner.nextInt()
                break
            } catch (e: InputMismatchException) {
                println("‚ùå Insira uma op√ß√£o v√°lida!")
                scanner.nextLine()
            }
        }

        when (opcaoEscolhida) {
            1 -> {
                scanner.nextLine()
                println("\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó")
                println("‚ïë             Cadastrar Paciente             ‚ïë")
                println("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù")

                print("üë§  Digite o nome completo do paciente: ")
                val nomeCompleto = scanner.nextLine()

                print("üÜî  Digite o CPF do paciente: ")
                val cpf = scanner.nextLine().uppercase(Locale.getDefault())

                print("‚ößÔ∏è  Digite o sexo do paciente (Masculino/Feminino/Outros): ")
                val sexo = scanner.nextLine().firstOrNull()?.uppercaseChar() ?: ' '
                var dataNascimento = LocalDate.now()

                while (true) {
                    print("üìÖ  Digite a data de nascimento do paciente (dd/MM/yyyy): ")
                    val dataNascimentoStr = scanner.nextLine()
                    try {
                        dataNascimento =
                            LocalDate.parse(dataNascimentoStr, DateTimeFormatter.ofPattern("dd/MM/yyyy"))
                        break
                    } catch (e: DateTimeParseException) {
                        println("‚ùå Digite a data no formato correto! Ex: 05/11/2003")
                    }
                }

                print("ü§ï  Relato de queixas e sintomas: ")
                val relatoQueixaSintomas = scanner.nextLine()

                var prioridade = 0
                while (true) {
                    try {
                        print("üö®  Digite a prioridade do paciente (1 - N√ÉO URGENTE, 2 - POUCO URGENTE, 3 - URGENTE, " +
                                "4 - MUITO URGENTE, 5 - EMERGENTE): ")
                        prioridade = scanner.nextInt()
                        break
                    } catch (e: InputMismatchException) {
                        println("‚ùå Prioridade inv√°lida! Tente novamente.")
                        scanner.nextLine()
                    }
                }

                fila.enfileirar(Paciente(nomeCompleto, cpf, sexo, dataNascimento, relatoQueixaSintomas, prioridade,
                    LocalDateTime.now()))
                println(fila.espiar())
                println("\n ‚úÖ Paciente $nomeCompleto cadastrado com sucesso ")
            }

            2 -> {
                scanner.nextLine() // Consumir a nova linha pendente
                println("\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó")
                println("‚ïë        üöë Chamar Pr√≥ximo Paciente          ‚ïë")
                println("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù")
                print("‚ö†Ô∏è  Digite a classifica√ß√£o de risco (E - Emerg√™ncia, V - Muito Urgente, U - Urgente, P - Pouco Urgente, N - N√£o Urgente) ou pressione Enter para selecionar automaticamente: ")
                val riskClassification = scanner.nextLine().toUpperCase().firstOrNull()

                if (riskClassification != null) {

                } else {

                }
            }

            3 -> {
                scanner.nextLine() // Consumir a nova linha pendente
                println("\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó")
                println("‚ïë   ‚è≥ Verificar Imin√™ncia de Atendimento     ‚ïë")
                println("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù")
                print("üÜî  Digite o CPF do paciente: ")
                val cpf = scanner.nextLine()

            }

            4 -> {
                scanner.nextLine() // Consumir a nova linha pendente
                println("\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó")
                println("‚ïë  üìã Consultar Pr√≥ximo Paciente de uma Fila  ‚ïë")
                println("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù")
                print("‚ö†Ô∏è  Digite a classifica√ß√£o de risco (E - Emerg√™ncia, V - Muito Urgente, U - Urgente, P - Pouco Urgente, N - N√£o Urgente): ")
                val riskClassification = scanner.nextLine().toUpperCase().firstOrNull() ?: ' '

            }

            5 -> {
                println("\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó")
                println("‚ïë        üìä Consultar Estat√≠sticas           ‚ïë")
                println("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù")

            }

            6 -> {
                println("\nüëã Saindo do sistema... At√© logo!")
                break
            }

            else -> {
                println("\n‚ùå Op√ß√£o inv√°lida, tente novamente.")
            }
        }
    }


    /*val fila = FilaPrioridade(10)
    fila.enfileirar(Paciente("Ana Silva", "123.456.789-00", 'F', LocalDate.of(1990, 5, 10),
        "Dor de cabe√ßa", 2, LocalDateTime.now()))
    sleep(1000)
    fila.enfileirar(Paciente("Bruno Santos", "987.654.321-11", 'M', LocalDate.of(1985, 8, 22),
        "Febre alta", 1, LocalDateTime.now()))
    sleep(200)
    fila.enfileirar(Paciente("Carlos Souza", "456.789.123-22", 'M', LocalDate.of(1978, 3, 15),
        "Dor abdominal", 3, LocalDateTime.now()))
    sleep(200)
    fila.enfileirar(Paciente("Daniela Lima", "321.654.987-33", 'F', LocalDate.of(1995, 12, 30),
        "Tontura", 2, LocalDateTime.now()))
    sleep(200)
    fila.enfileirar(Paciente("Eduardo Almeida", "654.321.987-44", 'M', LocalDate.of(1980, 7, 17),
        "Dor no peito", 1, LocalDateTime.now()))
    sleep(200)
    fila.enfileirar(Paciente("Fernanda Costa", "789.123.456-55", 'F', LocalDate.of(2000, 1, 5),
        "Fadiga", 3, LocalDateTime.now()))
    sleep(200)
    fila.enfileirar(Paciente("Gustavo Pereira", "147.258.369-66", 'M', LocalDate.of(1992, 6, 25),
        "N√°usea", 2, LocalDateTime.now()))
    sleep(200)
    fila.enfileirar(Paciente("Helena Rocha", "258.369.147-77", 'F', LocalDate.of(1988, 9, 18),
        "Tosse", 3, LocalDateTime.now()))
    sleep(200)
    fila.enfileirar(Paciente("Igor Oliveira", "369.147.258-88", 'M', LocalDate.of(1993, 4, 21),
        "Dificuldade para respirar", 1, LocalDateTime.now()))
    sleep(200)
    fila.enfileirar(Paciente("Julia Ribeiro", "159.753.486-99", 'F', LocalDate.of(1975, 11, 11),
        "Dor nas costas", 2, LocalDateTime.now()))
    println(fila.imprimir())
    println(fila.desenfileirar())
    println(fila.desenfileirar(1))
    println(fila.desenfileirar(2))
    println(fila.desenfileirar())
    println(fila.desenfileirar())
    println(fila.desenfileirar())
    println(fila.desenfileirar())
    println(fila.desenfileirar())
    println(fila.desenfileirar())
    println(fila.desenfileirar())*/


}